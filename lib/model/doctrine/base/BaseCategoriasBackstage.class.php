<?php

/**
 * BaseCategoriasBackstage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $categoria
 * @property string $slug
 * @property boolean $is_active
 * @property Doctrine_Collection $Backstage
 * 
 * @method string              getCategoria() Returns the current record's "categoria" value
 * @method string              getSlug()      Returns the current record's "slug" value
 * @method boolean             getIsActive()  Returns the current record's "is_active" value
 * @method Doctrine_Collection getBackstage() Returns the current record's "Backstage" collection
 * @method CategoriasBackstage setCategoria() Sets the current record's "categoria" value
 * @method CategoriasBackstage setSlug()      Sets the current record's "slug" value
 * @method CategoriasBackstage setIsActive()  Sets the current record's "is_active" value
 * @method CategoriasBackstage setBackstage() Sets the current record's "Backstage" collection
 * 
 * @package    JerryML
 * @subpackage model
 * @author     Ricardo Alcantara <richpolis@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategoriasBackstage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('categorias_backstage');
        $this->hasColumn('categoria', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Backstage', array(
             'local' => 'id',
             'foreign' => 'categoria_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'categoria',
             ),
             'unique' => true,
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
        $this->actAs($sluggable0);
    }
}